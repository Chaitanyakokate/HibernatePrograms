package in.pwskills.nitin.main;

import java.util.List;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;

import in.pwskills.nitin.bean.Project;
import in.pwskills.nitin.util.HibernateUtil;

public class QBCMainApp {

	public static void main(String[] args) {
		
		Session session = null;
		
		/*
		 * // QBC : HQL : SQL -> select ... from PROJECT_QBC try { session =
		 * HibernateUtil.getSession();
		 * 
		 * // Create a builder object CriteriaBuilder builder =
		 * session.getCriteriaBuilder();
		 * 
		 * // Create a CriteriaQuery object CriteriaQuery<Project> cQuery =
		 * builder.createQuery(Project.class);
		 * 
		 * Root<Project> root = cQuery.from(Project.class);
		 * 
		 * // adding root object to cquery object cQuery.select(root);
		 * 
		 * // prepare a query object having CQuery Query<Project> query =
		 * session.createQuery(cQuery);
		 * 
		 * // execute JPA QBC logic List<Project> list = query.getResultList();
		 * list.forEach(System.out::println);
		 * 
		 * } catch (HibernateException he) { he.printStackTrace(); } finally {
		 * HibernateUtil.closeSession(session); HibernateUtil.closeSessionFactory(); }
		 */
		
		try {
			session = HibernateUtil.getSession();
			
			CriteriaBuilder builder = session.getCriteriaBuilder();
			CriteriaQuery<Project> cquery = builder.createQuery(Project.class);
			
			Root<Project> root = cquery.from(Project.class);
			
			cquery.select(root);
			
			Query<Project> query = session.createQuery(cquery);
			List<Project> list = query.getResultList();
			
			list.forEach(System.out::println);
			
		} catch (HibernateException e) {
			e.printStackTrace();
		}finally {
			
		}

	}

}
